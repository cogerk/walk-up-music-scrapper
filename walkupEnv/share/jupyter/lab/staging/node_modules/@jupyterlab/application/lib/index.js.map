{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../application/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Local CSS must be loaded prior to loading other libs.\nimport '../style/index.css';\n\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\n\nimport { CommandLinker } from '@jupyterlab/apputils';\n\nimport { Base64ModelFactory, DocumentRegistry } from '@jupyterlab/docregistry';\n\nimport { IRenderMime } from '@jupyterlab/rendermime-interfaces';\n\nimport { ServiceManager } from '@jupyterlab/services';\n\nimport { Application, IPlugin } from '@phosphor/application';\n\nimport { DisposableDelegate, IDisposable } from '@phosphor/disposable';\n\nimport { createRendermimePlugins } from './mimerenderers';\n\nimport { ApplicationShell } from './shell';\nimport { ISignal, Signal } from '@phosphor/signaling';\n\nexport { ILayoutRestorer, LayoutRestorer } from './layoutrestorer';\nexport { IMimeDocumentTracker } from './mimerenderers';\nexport { IRouter, Router } from './router';\nexport { ApplicationShell } from './shell';\n\n/**\n * The type for all JupyterLab plugins.\n */\nexport type JupyterLabPlugin<T> = IPlugin<JupyterLab, T>;\n\n/**\n * JupyterLab is the main application class. It is instantiated once and shared.\n */\nexport class JupyterLab extends Application<ApplicationShell> {\n  /**\n   * Construct a new JupyterLab object.\n   */\n  constructor(options: JupyterLab.IOptions = {}) {\n    super({ shell: new ApplicationShell() });\n    this._busySignal = new Signal(this);\n    this._dirtySignal = new Signal(this);\n\n    // Construct the default workspace name.\n    const defaultWorkspace = URLExt.join(\n      PageConfig.getOption('baseUrl'),\n      PageConfig.getOption('pageUrl')\n    );\n\n    // Set default workspace in page config.\n    PageConfig.setOption('defaultWorkspace', defaultWorkspace);\n\n    // Instantiate public resources.\n    this.serviceManager = options.serviceManager || new ServiceManager();\n    this.commandLinker =\n      options.commandLinker || new CommandLinker({ commands: this.commands });\n    this.docRegistry = options.docRegistry || new DocumentRegistry();\n\n    // Remove extra resources (non-IInfo) from options object.\n    delete options.serviceManager;\n    delete options.commandLinker;\n    delete options.docRegistry;\n\n    // Populate application info.\n    this._info = {\n      ...JupyterLab.defaultInfo,\n      ...(options as Partial<JupyterLab.IInfo>),\n      ...{ defaultWorkspace }\n    };\n\n    if (this._info.devMode) {\n      this.shell.addClass('jp-mod-devMode');\n    }\n\n    // Make workspace accessible via a getter because it is set at runtime.\n    Object.defineProperty(this._info, 'workspace', {\n      get: () => PageConfig.getOption('workspace') || ''\n    });\n\n    // Add initial model factory.\n    this.docRegistry.addModelFactory(new Base64ModelFactory());\n\n    if (options.mimeExtensions) {\n      for (let plugin of createRendermimePlugins(options.mimeExtensions)) {\n        this.registerPlugin(plugin);\n      }\n    }\n  }\n\n  /**\n   * The document registry instance used by the application.\n   */\n  readonly docRegistry: DocumentRegistry;\n\n  /**\n   * The command linker used by the application.\n   */\n  readonly commandLinker: CommandLinker;\n\n  /**\n   * The service manager used by the application.\n   */\n  readonly serviceManager: ServiceManager;\n\n  /**\n   * A list of all errors encountered when registering plugins.\n   */\n  readonly registerPluginErrors: Array<Error> = [];\n\n  /**\n   * A method invoked on a document `'contextmenu'` event.\n   *\n   * #### Notes\n   * The default implementation of this method opens the application\n   * `contextMenu` at the current mouse position.\n   *\n   * If the application context menu has no matching content *or* if\n   * the shift key is pressed, the default browser context menu will\n   * be opened instead.\n   *\n   * A subclass may reimplement this method as needed.\n   */\n  protected evtContextMenu(event: MouseEvent): void {\n    if (event.shiftKey) {\n      return;\n    }\n\n    this._contextMenuEvent = event;\n    if (this.contextMenu.open(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Gets the hierarchy of html nodes that was under the cursor\n   * when the most recent contextmenu event was issued\n   */\n  get contextMenuNodes(): HTMLElement[] {\n    if (!this._contextMenuEvent) {\n      return [];\n    }\n\n    // this one-liner doesn't work, but should at some point\n    // in the future (https://developer.mozilla.org/en-US/docs/Web/API/Event)\n    // return this._contextMenuEvent.composedPath() as HTMLElement[];\n\n    let nodes: HTMLElement[] = [this._contextMenuEvent.target as HTMLElement];\n    while (\n      'parentNode' in nodes[nodes.length - 1] &&\n      nodes[nodes.length - 1].parentNode &&\n      nodes[nodes.length - 1] !== nodes[nodes.length - 1].parentNode\n    ) {\n      nodes.push(nodes[nodes.length - 1].parentNode as HTMLElement);\n    }\n    return nodes;\n  }\n\n  /**\n   * Whether the application is dirty.\n   */\n  get isDirty(): boolean {\n    return this._dirtyCount > 0;\n  }\n\n  /**\n   * Whether the application is busy.\n   */\n  get isBusy(): boolean {\n    return this._busyCount > 0;\n  }\n\n  /**\n   * Returns a signal for when application changes its busy status.\n   */\n  get busySignal(): ISignal<JupyterLab, boolean> {\n    return this._busySignal;\n  }\n\n  /**\n   * Returns a signal for when application changes its dirty status.\n   */\n  get dirtySignal(): ISignal<JupyterLab, boolean> {\n    return this._dirtySignal;\n  }\n\n  /**\n   * The information about the application.\n   */\n  get info(): JupyterLab.IInfo {\n    return this._info;\n  }\n\n  /**\n   * Promise that resolves when state is first restored, returning layout description.\n   *\n   * #### Notes\n   * This is just a reference to `shell.restored`.\n   */\n  get restored(): Promise<ApplicationShell.ILayout> {\n    return this.shell.restored;\n  }\n\n  /**\n   * Gets all of the valid, non-empty values of a given property\n   * across all of the nodes in the hierarchy returned by contextMenuNodes\n   */\n  contextMenuValues(prop: string): any[] {\n    let vals: any[] = [];\n    for (let node of this.contextMenuNodes as any[]) {\n      if (prop in node && node[prop]) {\n        vals.push(node[prop]);\n      }\n    }\n    return vals;\n  }\n\n  /**\n   * Gets the first valid, non-empty value of a property\n   * in the node hierarchy returned by contextMenuNodes.\n   * Optionally, gets the first value that matches a passed-in RegExp\n   */\n  contextMenuFirst(prop: string, regexp: RegExp | null = null): any | null {\n    if (regexp) {\n      for (let node of this.contextMenuNodes as any[]) {\n        if (prop in node && node[prop]) {\n          let match = node[prop].match(regexp);\n          if (match) {\n            return match;\n          }\n        }\n      }\n    } else {\n      for (let node of this.contextMenuNodes as any[]) {\n        if (prop in node && node[prop]) {\n          return node[prop];\n        }\n      }\n    }\n\n    return;\n  }\n\n  /**\n   * Set the application state to dirty.\n   *\n   * @returns A disposable used to clear the dirty state for the caller.\n   */\n  setDirty(): IDisposable {\n    const oldDirty = this.isDirty;\n    this._dirtyCount++;\n    if (this.isDirty !== oldDirty) {\n      this._dirtySignal.emit(this.isDirty);\n    }\n    return new DisposableDelegate(() => {\n      const oldDirty = this.isDirty;\n      this._dirtyCount = Math.max(0, this._dirtyCount - 1);\n      if (this.isDirty !== oldDirty) {\n        this._dirtySignal.emit(this.isDirty);\n      }\n    });\n  }\n\n  /**\n   * Set the application state to busy.\n   *\n   * @returns A disposable used to clear the busy state for the caller.\n   */\n  setBusy(): IDisposable {\n    const oldBusy = this.isBusy;\n    this._busyCount++;\n    if (this.isBusy !== oldBusy) {\n      this._busySignal.emit(this.isBusy);\n    }\n    return new DisposableDelegate(() => {\n      const oldBusy = this.isBusy;\n      this._busyCount--;\n      if (this.isBusy !== oldBusy) {\n        this._busySignal.emit(this.isBusy);\n      }\n    });\n  }\n\n  /**\n   * Register plugins from a plugin module.\n   *\n   * @param mod - The plugin module to register.\n   */\n  registerPluginModule(mod: JupyterLab.IPluginModule): void {\n    let data = mod.default;\n    // Handle commonjs exports.\n    if (!mod.hasOwnProperty('__esModule')) {\n      data = mod as any;\n    }\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n    data.forEach(item => {\n      try {\n        this.registerPlugin(item);\n      } catch (error) {\n        this.registerPluginErrors.push(error);\n      }\n    });\n  }\n\n  /**\n   * Register the plugins from multiple plugin modules.\n   *\n   * @param mods - The plugin modules to register.\n   */\n  registerPluginModules(mods: JupyterLab.IPluginModule[]): void {\n    mods.forEach(mod => {\n      this.registerPluginModule(mod);\n    });\n  }\n\n  private _contextMenuEvent: MouseEvent;\n  private _info: JupyterLab.IInfo;\n  private _dirtyCount = 0;\n  private _busyCount = 0;\n  private _busySignal: Signal<JupyterLab, boolean>;\n  private _dirtySignal: Signal<JupyterLab, boolean>;\n}\n\n/**\n * The namespace for `JupyterLab` class statics.\n */\nexport namespace JupyterLab {\n  /**\n   * The options used to initialize a JupyterLab object.\n   */\n  export interface IOptions extends Partial<IInfo> {\n    /**\n     * The document registry instance used by the application.\n     */\n    docRegistry?: DocumentRegistry;\n\n    /**\n     * The command linker used by the application.\n     */\n    commandLinker?: CommandLinker;\n\n    /**\n     * The service manager used by the application.\n     */\n    serviceManager?: ServiceManager;\n  }\n\n  /**\n   * The information about a JupyterLab application.\n   */\n  export interface IInfo {\n    /**\n     * The name of the JupyterLab application.\n     */\n    readonly name: string;\n\n    /**\n     * The version of the JupyterLab application.\n     */\n    readonly version: string;\n\n    /**\n     * The namespace/prefix plugins may use to denote their origin.\n     */\n    readonly namespace: string;\n\n    /**\n     * Whether the application is in dev mode.\n     */\n    readonly devMode: boolean;\n\n    /**\n     * The collection of deferred extension patterns and matched extensions.\n     */\n    readonly deferred: { patterns: string[]; matches: string[] };\n\n    /**\n     * The collection of disabled extension patterns and matched extensions.\n     */\n    readonly disabled: { patterns: string[]; matches: string[] };\n\n    /**\n     * The mime renderer extensions.\n     */\n    readonly mimeExtensions: IRenderMime.IExtensionModule[];\n\n    /**\n     * The urls used by the application.\n     */\n    readonly urls: {\n      readonly base: string;\n      readonly page: string;\n      readonly public: string;\n      readonly settings: string;\n      readonly themes: string;\n      readonly tree: string;\n      readonly workspaces: string;\n    };\n\n    /**\n     * The local directories used by the application.\n     */\n    readonly directories: {\n      readonly appSettings: string;\n      readonly schemas: string;\n      readonly static: string;\n      readonly templates: string;\n      readonly themes: string;\n      readonly userSettings: string;\n      readonly serverRoot: string;\n      readonly workspaces: string;\n    };\n\n    /**\n     * Whether files are cached on the server.\n     */\n    readonly filesCached: boolean;\n\n    /**\n     * The name of the current workspace.\n     */\n    readonly workspace: string;\n\n    /**\n     * The name of the default workspace.\n     */\n    readonly defaultWorkspace: string;\n  }\n\n  /**\n   * The default application info.\n   */\n  export const defaultInfo: IInfo = {\n    name: PageConfig.getOption('appName') || 'JupyterLab',\n    namespace: PageConfig.getOption('appNamespace'),\n    version: PageConfig.getOption('appVersion') || 'unknown',\n    devMode: PageConfig.getOption('devMode').toLowerCase() === 'true',\n    deferred: { patterns: [], matches: [] },\n    disabled: { patterns: [], matches: [] },\n    mimeExtensions: [],\n    urls: {\n      base: PageConfig.getOption('baseUrl'),\n      page: PageConfig.getOption('pageUrl'),\n      public: PageConfig.getOption('publicUrl'),\n      settings: PageConfig.getOption('settingsUrl'),\n      themes: PageConfig.getOption('themesUrl'),\n      tree: PageConfig.getOption('treeUrl'),\n      workspaces: PageConfig.getOption('workspacesUrl')\n    },\n    directories: {\n      appSettings: PageConfig.getOption('appSettingsDir'),\n      schemas: PageConfig.getOption('schemasDir'),\n      static: PageConfig.getOption('staticDir'),\n      templates: PageConfig.getOption('templatesDir'),\n      themes: PageConfig.getOption('themesDir'),\n      userSettings: PageConfig.getOption('userSettingsDir'),\n      serverRoot: PageConfig.getOption('serverRoot'),\n      workspaces: PageConfig.getOption('workspacesDir')\n    },\n    filesCached: PageConfig.getOption('cacheFiles').toLowerCase() === 'true',\n    workspace: '',\n    defaultWorkspace: ''\n  };\n\n  /**\n   * The interface for a module that exports a plugin or plugins as\n   * the default value.\n   */\n  export interface IPluginModule {\n    /**\n     * The default export.\n     */\n    default: JupyterLabPlugin<any> | JupyterLabPlugin<any>[];\n  }\n}\n"]}