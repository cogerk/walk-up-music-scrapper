{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../tooltip-extension/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Kernel, KernelMessage, Session } from '@jupyterlab/services';\n\nimport { find } from '@phosphor/algorithm';\n\nimport { JSONObject } from '@phosphor/coreutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { Text } from '@jupyterlab/coreutils';\n\nimport { JupyterLab, JupyterLabPlugin } from '@jupyterlab/application';\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { IConsoleTracker } from '@jupyterlab/console';\n\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\n\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport { ITooltipManager, Tooltip } from '@jupyterlab/tooltip';\n\n/**\n * The command IDs used by the tooltip plugin.\n */\nnamespace CommandIDs {\n  export const dismiss = 'tooltip:dismiss';\n\n  export const launchConsole = 'tooltip:launch-console';\n\n  export const launchNotebook = 'tooltip:launch-notebook';\n\n  export const launchFile = 'tooltip:launch-file';\n}\n\n/**\n * The main tooltip manager plugin.\n */\nconst manager: JupyterLabPlugin<ITooltipManager> = {\n  id: '@jupyterlab/tooltip-extension:manager',\n  autoStart: true,\n  provides: ITooltipManager,\n  activate: (app: JupyterLab): ITooltipManager => {\n    let tooltip: Tooltip | null = null;\n\n    // Add tooltip dismiss command.\n    app.commands.addCommand(CommandIDs.dismiss, {\n      execute: () => {\n        if (tooltip) {\n          tooltip.dispose();\n          tooltip = null;\n        }\n      }\n    });\n\n    return {\n      invoke(options: ITooltipManager.IOptions): Promise<void> {\n        const detail: 0 | 1 = 0;\n        const { anchor, editor, kernel, rendermime } = options;\n\n        if (tooltip) {\n          tooltip.dispose();\n          tooltip = null;\n        }\n\n        return Private.fetch({ detail, editor, kernel })\n          .then(bundle => {\n            tooltip = new Tooltip({ anchor, bundle, editor, rendermime });\n            Widget.attach(tooltip, document.body);\n          })\n          .catch(() => {\n            /* Fails silently. */\n          });\n      }\n    };\n  }\n};\n\n/**\n * The console tooltip plugin.\n */\nconst consoles: JupyterLabPlugin<void> = {\n  id: '@jupyterlab/tooltip-extension:consoles',\n  autoStart: true,\n  requires: [ITooltipManager, IConsoleTracker],\n  activate: (\n    app: JupyterLab,\n    manager: ITooltipManager,\n    consoles: IConsoleTracker\n  ): void => {\n    // Add tooltip launch command.\n    app.commands.addCommand(CommandIDs.launchConsole, {\n      execute: () => {\n        const parent = consoles.currentWidget;\n\n        if (!parent) {\n          return;\n        }\n\n        const anchor = parent.console;\n        const editor = anchor.promptCell.editor;\n        const kernel = anchor.session.kernel;\n        const rendermime = anchor.rendermime;\n\n        // If all components necessary for rendering exist, create a tooltip.\n        if (!!editor && !!kernel && !!rendermime) {\n          return manager.invoke({ anchor, editor, kernel, rendermime });\n        }\n      }\n    });\n  }\n};\n\n/**\n * The notebook tooltip plugin.\n */\nconst notebooks: JupyterLabPlugin<void> = {\n  id: '@jupyterlab/tooltip-extension:notebooks',\n  autoStart: true,\n  requires: [ITooltipManager, INotebookTracker],\n  activate: (\n    app: JupyterLab,\n    manager: ITooltipManager,\n    notebooks: INotebookTracker\n  ): void => {\n    // Add tooltip launch command.\n    app.commands.addCommand(CommandIDs.launchNotebook, {\n      execute: () => {\n        const parent = notebooks.currentWidget;\n\n        if (!parent) {\n          return;\n        }\n\n        const anchor = parent.content;\n        const editor = anchor.activeCell.editor;\n        const kernel = parent.session.kernel;\n        const rendermime = parent.rendermime;\n\n        // If all components necessary for rendering exist, create a tooltip.\n        if (!!editor && !!kernel && !!rendermime) {\n          return manager.invoke({ anchor, editor, kernel, rendermime });\n        }\n      }\n    });\n  }\n};\n\n/**\n * The file editor tooltip plugin.\n */\nconst files: JupyterLabPlugin<void> = {\n  id: '@jupyterlab/tooltip-extension:files',\n  autoStart: true,\n  requires: [ITooltipManager, IEditorTracker, IRenderMimeRegistry],\n  activate: (\n    app: JupyterLab,\n    manager: ITooltipManager,\n    editorTracker: IEditorTracker,\n    rendermime: IRenderMimeRegistry\n  ): void => {\n    // Keep a list of active ISessions so that we can\n    // clean them up when they are no longer needed.\n    const activeSessions: {\n      [id: string]: Session.ISession;\n    } = {};\n\n    const sessions = app.serviceManager.sessions;\n    // When the list of running sessions changes,\n    // check to see if there are any kernels with a\n    // matching path for the file editors.\n    const onRunningChanged = (\n      sender: Session.IManager,\n      models: Session.IModel[]\n    ) => {\n      editorTracker.forEach(file => {\n        const model = find(models, m => file.context.path === m.path);\n        if (model) {\n          const oldSession = activeSessions[file.id];\n          // If there is a matching path, but it is the same\n          // session as we previously had, do nothing.\n          if (oldSession && oldSession.id === model.id) {\n            return;\n          }\n          // Otherwise, dispose of the old session and reset to\n          // a new CompletionConnector.\n          if (oldSession) {\n            delete activeSessions[file.id];\n            oldSession.dispose();\n          }\n          const session = sessions.connectTo(model);\n          activeSessions[file.id] = session;\n        } else {\n          const session = activeSessions[file.id];\n          if (session) {\n            session.dispose();\n            delete activeSessions[file.id];\n          }\n        }\n      });\n    };\n    Session.listRunning().then(models => {\n      onRunningChanged(sessions, models);\n    });\n    sessions.runningChanged.connect(onRunningChanged);\n\n    // Clean up after a widget when it is disposed\n    editorTracker.widgetAdded.connect((sender, widget) => {\n      widget.disposed.connect(w => {\n        const session = activeSessions[w.id];\n        if (session) {\n          session.dispose();\n          delete activeSessions[w.id];\n        }\n      });\n    });\n\n    // Add tooltip launch command.\n    app.commands.addCommand(CommandIDs.launchFile, {\n      execute: async () => {\n        const parent = editorTracker.currentWidget;\n        const kernel =\n          parent &&\n          activeSessions[parent.id] &&\n          activeSessions[parent.id].kernel;\n        if (!kernel) {\n          return;\n        }\n        const anchor = parent.content;\n        const editor = anchor.editor;\n\n        // If all components necessary for rendering exist, create a tooltip.\n        if (!!editor && !!kernel && !!rendermime) {\n          return manager.invoke({ anchor, editor, kernel, rendermime });\n        }\n      }\n    });\n  }\n};\n\n/**\n * Export the plugins as default.\n */\nconst plugins: JupyterLabPlugin<any>[] = [manager, consoles, notebooks, files];\nexport default plugins;\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * A counter for outstanding requests.\n   */\n  let pending = 0;\n\n  export interface IFetchOptions {\n    /**\n     * The detail level requested from the API.\n     *\n     * #### Notes\n     * The only acceptable values are 0 and 1. The default value is 0.\n     * @see http://jupyter-client.readthedocs.io/en/latest/messaging.html#introspection\n     */\n    detail?: 0 | 1;\n\n    /**\n     * The referent editor for the tooltip.\n     */\n    editor: CodeEditor.IEditor;\n\n    /**\n     * The kernel against which the API request will be made.\n     */\n    kernel: Kernel.IKernelConnection;\n  }\n\n  /**\n   * Fetch a tooltip's content from the API server.\n   */\n  export function fetch(options: IFetchOptions): Promise<JSONObject> {\n    let { detail, editor, kernel } = options;\n    let code = editor.model.value.text;\n    let position = editor.getCursorPosition();\n    let offset = Text.jsIndexToCharIndex(editor.getOffsetAt(position), code);\n\n    // Clear hints if the new text value is empty or kernel is unavailable.\n    if (!code || !kernel) {\n      return Promise.reject(void 0);\n    }\n\n    let contents: KernelMessage.IInspectRequest = {\n      code,\n      cursor_pos: offset,\n      detail_level: detail || 0\n    };\n    let current = ++pending;\n\n    return kernel.requestInspect(contents).then(msg => {\n      let value = msg.content;\n\n      // If a newer request is pending, bail.\n      if (current !== pending) {\n        return Promise.reject(void 0) as Promise<JSONObject>;\n      }\n\n      // If request fails or returns negative results, bail.\n      if (value.status !== 'ok' || !value.found) {\n        return Promise.reject(void 0) as Promise<JSONObject>;\n      }\n\n      return Promise.resolve(value.data);\n    });\n  }\n}\n"]}